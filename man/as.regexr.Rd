% Generated by roxygen2 (4.0.2): do not edit by hand
\name{as.regexr}
\alias{as.regexr}
\title{Generic Method to Coerce to regexr}
\usage{
as.regexr(x, names = TRUE, comments = TRUE, comments.below = TRUE, ...)
}
\arguments{
\item{x}{An object to coerce to a \code{regexr} object.}

\item{names}{logical.  Should names be included in the \code{construct}
script?}

\item{comments}{logical.  Should comments be included in the \code{construct}
script?}

\item{comments.below}{logical.  Should comments be included below the regex
in the \code{construct} script?  If \code{FALSE} comments are placed behind
the regular expression chunks.}

\item{\ldots}{Other arguments passed to \code{as.regexr} methods.}
}
\value{
Returns a dual \code{regexr} and \code{reverse_construct} object.
}
\description{
Coerce an object to \code{regexr} class.
}
\examples{
library("qdapRegex")
(myregex <- grab("@rm_time2"))
out <- as.regexr(myregex)

out
summary(out)
comments(out)
regex(out)
test(out)
cat(get_construct(out))
\donttest{
## On Windows copy to clipboard
get_construct(out, file="clipboard")
}

## No names & comments behind regex
myregex2 <- "(\\\\s*[a-z]+)([^)]+\\\\))"
get_construct(as.regexr(myregex2, names=FALSE, comments.below=FALSE))
}

